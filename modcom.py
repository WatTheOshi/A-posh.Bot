import json
import asyncio
import discord
from discord.ext import commands
from dotenv import load_dotenv
import os
import random
import time
import humanfriendly
from datetime import datetime, timezone, timedelta


LOG_FILE = "mute_logs.json"

def log_timeout_action(user, moderator, reason, duration_seconds, action="mute"):
    log_entry = {
        "user_id": user.id,
        "username": str(user),
        "moderator_id": moderator.id,
        "moderator_name": str(moderator),
        "reason": reason,
        "duration_seconds": duration_seconds,
        "timestamp": datetime.utcnow().isoformat(),
        "action": action
    }

    # –°–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists(LOG_FILE):
        with open(LOG_FILE, "w", encoding="utf-8") as f:
            json.dump([], f, indent=4)

    # –ª–æ–≥
    with open(LOG_FILE, "r+", encoding="utf-8") as f:
        data = json.load(f)
        data.append(log_entry)
        f.seek(0)
        json.dump(data, f, indent=4)
        f.truncate()



test_mode = False

# --- –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã ---
def setup(bot):
     # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–¥–µ—Å—å –Ω–µ—Ç `on_message`, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
    pass

    @bot.command(aliases=['mute', '–º—É—Ç', '–º—å—é—Ç', 'timemute'])
    @commands.has_permissions(administrator=True)
    async def timeout(ctx, member: discord.Member = None, time=None, *, reason=None):
        author = ctx.author
        if member is not None:
            if time is not None:
                try:
                    t = humanfriendly.parse_timespan(time)
                    await member.timeout(timedelta(seconds=t), reason=reason)

                    log_timeout_action(
                    user=member,
                    moderator=ctx.author,
                    reason=reason,
                    duration_seconds=int(t),
                    action="mute"
                )


                    embed = discord.Embed(
                        title='–£—Å–ø–µ—à–Ω–æ –∑–∞–º—É—á–µ–Ω',
                        description=f'**{member.mention}** –∑–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ **{time}**\n\n**–ü–æ –ø—Ä–∏—á–∏–Ω–µ: `{reason}`**',
                        colour=discord.Colour.from_rgb(0, 189, 0)
                    )
                    await ctx.send(embed=embed)
                except Exception as e:
                    await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            else:
                embed = discord.Embed(
                    title='–ë–ª—è—Ç—å, –Ω–µ –≤—Å—ë —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ',
                    description=f'{author.mention}, —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–º—É—Ç–∞.',
                    colour=discord.Colour.from_rgb(171, 0, 0)
                )
                await ctx.send(embed=embed)
        else:
            embed = discord.Embed(
                title='–ë–ª—è—Ç—å, –Ω–µ –≤—Å—ë —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ',
                description=f'{author.mention}, —É–∫–∞–∂–∏—Ç–µ –∫–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å.',
                colour=discord.Colour.from_rgb(171, 0, 0)
            )
            await ctx.send(embed=embed)


    @bot.command(aliases=['unmute', '—Ä–∞–∑–º—É—Ç', '–∞–Ω–º—å—é—Ç'])
    @commands.has_permissions(administrator=True)
    async def untimeout(ctx, member: discord.Member = None, *, reason=None):
        author = ctx.author
        if member is not None:
            try:
                await member.timeout(None, reason=reason)

                log_timeout_action(
                user=member,
                moderator=ctx.author,
                reason=reason,
                duration_seconds=0,
                action="unmute"
                )


                embed = discord.Embed(
                    title='–£—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º—É—á–µ–Ω',
                    description=f'**{member.mention}** —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –≥–∞–≤–∫–∞—Ç—å!\n\n**–ü–æ –ø—Ä–∏—á–∏–Ω–µ: `{reason}`**',
                    colour=discord.Colour.from_rgb(0, 189, 0)
                )
                await ctx.send(embed=embed)
            except Exception as e:
                await ctx.send(f"–≠—Ö—Ö, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å!")
        else:
            embed = discord.Embed(
                title='–ë–ª—è—Ç—å, –Ω–µ –≤—Å—ë —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ',
                description=f'{author.mention}, —É–∫–∞–∂–∏—Ç–µ –∫–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–º—É—Ç–∏—Ç—å.',
                colour=discord.Colour.from_rgb(171, 0, 0)
            )
            await ctx.send(embed=embed)


    @bot.command(name="clear")
    @commands.has_permissions(administrator=True)
    async def clear(ctx, amount: int):
        """–£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π."""
        if amount < 1:
            await ctx.send("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
            return
        else:
            await ctx.channel.purge(limit=amount + 1)
            await ctx.channel.send(f"–ü–æ–¥–º–µ—Ç–∞—é –∞–∂ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π...")


    @bot.command(name="ban")
    @commands.has_permissions(administrator=True)
    async def ban(ctx, member: discord.Member, *, reason="–ó–∞–∂–∞–ª"):
        """–ë–∞–Ω–∏—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        try:
            if test_mode:
                await ctx.send(f"–Ø –±—ã –∑–∞–±–∞–Ω–∏–ª–∞ {member.mention} –∑–∞: {reason} –Ω–æ —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å...")
            else:
                await member.ban(reason=reason)

                embed = discord.Embed(
                    title="–û–¥–Ω–∏–º –∏–∑ –∞–ø–æ—Å—Ç–æ–ª–æ–≤ –±—ã–ª–æ —Ä–µ—à–µ–Ω–æ!",
                    description=f"{member.mention} –ª—é—Ç–æ –∑–∞–±–∞–Ω–µ–Ω –∏ –æ—Ç—ä–µ–±–∞–Ω–µ–Ω!",
                    color=discord.Color.red()
                )
                embed.add_field(name="–ü–æ –ø—Ä–∏—á–∏–Ω–µ —Å–≤–µ—Ä—Ö —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π", value=reason, inline=False)
                embed.set_footer(text="–ê–ø–æ—à–∫–∞ —Å–ª–µ–¥–∏—Ç –∑–∞ –≤–∞–º–∏, —Ä–µ–±—è—Ç–∞...")
                await ctx.send(embed=embed)
                await ctx.send("https://tenor.com/pEAz7Zo8ljh.gif")

        except discord.Forbidden:
            await ctx.send("–£ –ø–æ–¥—á–∏–Ω–µ–Ω–Ω–æ–π –û—à–∏ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤...")
        except discord.HTTPException:
            await ctx.send("–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è... –î–∞ –±–ª—è, –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è...")


    @bot.command(name="kick")
    @commands.has_permissions(administrator=True)
    async def kick(ctx, member: discord.Member, *, reason="–ó–∞–∂–∞–ª"):
        """–ö–∏–∫–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        try:
            if test_mode:
                await ctx.send(f"–Ø –±—ã –∏–∑–≥–Ω–∞–ª–∞ {member.mention} –∑–∞: {reason} –Ω–æ —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å...")
            else:
                await member.kick(reason=reason)

                embed = discord.Embed(
                    title="–û–¥–Ω–∏–º –∏–∑ –∞–ø–æ—Å—Ç–æ–ª–æ–≤ –±—ã–ª–æ —Ä–µ—à–µ–Ω–æ!",
                    description=f"{member.mention} –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞—Ö—É–π!",
                    color=discord.Color.red()
                )
                embed.add_field(name="–ü–æ –ø—Ä–∏—á–∏–Ω–µ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π", value=reason, inline=False)
                embed.set_footer(text="–ê–ø–æ—à —Å–ª–µ–¥–∏—Ç –∑–∞ –≤–∞–º–∏, —Ä–µ–±—è—Ç–∞...")
                await ctx.send(embed=embed)
                await ctx.send("https://tenor.com/pEAz7Zo8ljh.gif")

        except discord.Forbidden:
            await ctx.send("–£ –ø–æ–¥—á–∏–Ω–µ–Ω–Ω–æ–π –û—à–∏ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤...")
        except discord.HTTPException:
            await ctx.send("–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è... –ü–∏–∑–¥–µ—Ü, –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è...")

    @bot.command(aliases=['mutes', '–º—É—Ç—ã', 'mutelog'])
    @commands.has_permissions(administrator=True)
    async def show_mutes(ctx):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º—É—Ç–æ–≤."""
        try:
            if not os.path.exists(LOG_FILE):
                await ctx.send("–ö–∞—Ä—Ç–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞—è...")
                return

            with open(LOG_FILE, "r", encoding="utf-8") as f:
                data = json.load(f)

            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –º—É—Ç—ã
            mutes = [entry for entry in data if entry["action"] == "mute"]

            if not mutes:
                await ctx.send("–ü–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –º—É—Ç–∏–ª–∞... –ê—É?")
                return

            # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
            last_mutes = mutes[-10:][::-1]  # —Å–≤–µ–∂–∏–µ —Å–≤–µ—Ä—Ö—É

            embed = discord.Embed(
                title="üîá –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∂–µ—Ä—Ç–≤—ã",
                color=discord.Color.light_grey()
            )

            for entry in last_mutes:
                user_name = entry["username"]
                reason = entry.get("reason", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
                duration = humanfriendly.format_timespan(entry["duration_seconds"])
                time_str = entry["timestamp"].replace("T", " ").split(".")[0] + " UTC"

                embed.add_field(
                    name=user_name,
                    value=f"‚è± `{duration}` | üìù `{reason}`\nüïí `{time_str}`",
                    inline=False
                )

            await ctx.send(embed=embed)

        except Exception as e:
            await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–æ–≥–æ–≤: {e}")

    @bot.command(name="voice")
    async def voice(ctx, amountUsers: int):
        """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –≤ —Ç–æ–π –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≥–¥–µ –±—ã–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å."""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        if ctx.author.voice and ctx.author.voice.channel:
            guild = ctx.guild
            author = ctx.author
            old_channel = ctx.author.voice.channel
            category = old_channel.category  # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞

            # –°–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª
            overwrites = {
                guild.default_role: discord.PermissionOverwrite(connect=False),
                author: discord.PermissionOverwrite(connect=True, manage_channels=True)
            }
            channel = await guild.create_voice_channel(
                name=f"& –°–æ–±—Ä–∞–Ω–∏–µ {author.name}",
                user_limit=amountUsers,
                overwrites=overwrites,
                category=category,  # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                reason="–ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ"
            )

            await ctx.send("–ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–æ!")
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
            await author.move_to(channel)

            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ –æ–Ω –ø—É—Å—Ç
            async def delete_when_empty(channel):
                while True:
                    await asyncio.sleep(1)
                    ch = guild.get_channel(channel.id)
                    if ch is None:
                        break
                    if len(ch.members) == 0:
                        await ctx.send(f"–°–æ–±—Ä–∞–Ω–∏–µ {author.name} –æ–∫–æ–Ω—á–∏–ª–æ—Å—å...")
                        await ch.delete(reason="–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –æ–ø—É—Å—Ç–µ–ª")
                        break

            # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
            ctx.bot.loop.create_task(delete_when_empty(channel))
        else:
            await ctx.send("–°–Ω–∞—á–∞–ª–∞ –∑–∞–π–¥–∏—Ç–µ –≤ –ª—é–±–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!")

